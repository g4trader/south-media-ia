{"ast":null,"code":"const API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://api.iasouth.tech/api' : 'https://8080-ibb8c5dgcr7sbiz6k13da-be6dae4d.manusvm.computer/api';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const token = localStorage.getItem('token');\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n  async login(credentials) {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  }\n  async logout() {\n    return this.request('/auth/logout', {\n      method: 'POST'\n    });\n  }\n  async getAdminStats() {\n    return this.request('/dashboard/admin/stats');\n  }\n  async getAdminClients() {\n    return this.request('/dashboard/admin/clients');\n  }\n  async getClientCampaigns(clientId) {\n    return this.request(`/dashboard/admin/clients/${clientId}/campaigns`);\n  }\n  async getCampaignDashboard(campaignId) {\n    return this.request(`/dashboard/campaign/${campaignId}`);\n  }\n  async getUsers() {\n    return this.request('/users');\n  }\n  async createUser(userData) {\n    return this.request('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n  async updateUser(userId, userData) {\n    return this.request(`/users/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(userData)\n    });\n  }\n  async deleteUser(userId) {\n    return this.request(`/users/${userId}`, {\n      method: 'DELETE'\n    });\n  }\n  async me() {\n    return this.request('/auth/me');\n  }\n\n  // Novos métodos para vídeo\n  async getVideoCampaigns() {\n    return this.request('/dashboard/video/campaigns');\n  }\n  async getVideoCampaignDashboard(campaignId) {\n    return this.request(`/dashboard/video/campaign/${campaignId}`);\n  }\n  async getVideoFormatsComparison() {\n    return this.request('/dashboard/video/formats/comparison');\n  }\n}\nconst apiService = new ApiService();\nconst authService = {\n  login: (username, password) => apiService.login({\n    username,\n    password\n  }),\n  logout: () => apiService.logout(),\n  me: () => apiService.me()\n};\nexport { authService };\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","NODE_ENV","ApiService","constructor","baseURL","request","endpoint","options","url","token","localStorage","getItem","config","headers","response","fetch","ok","Error","status","json","error","console","login","credentials","method","body","JSON","stringify","logout","getAdminStats","getAdminClients","getClientCampaigns","clientId","getCampaignDashboard","campaignId","getUsers","createUser","userData","updateUser","userId","deleteUser","me","getVideoCampaigns","getVideoCampaignDashboard","getVideoFormatsComparison","apiService","authService","username","password"],"sources":["/home/ubuntu/south-media-ia/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://api.iasouth.tech/api'\n  : 'https://8080-ibb8c5dgcr7sbiz6k13da-be6dae4d.manusvm.computer/api';\n\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const token = localStorage.getItem('token');\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    try {\n      const response = await fetch(url, config);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  async login(credentials) {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n    });\n  }\n\n  async logout() {\n    return this.request('/auth/logout', {\n      method: 'POST',\n    });\n  }\n\n  async getAdminStats() {\n    return this.request('/dashboard/admin/stats');\n  }\n\n  async getAdminClients() {\n    return this.request('/dashboard/admin/clients');\n  }\n\n  async getClientCampaigns(clientId) {\n    return this.request(`/dashboard/admin/clients/${clientId}/campaigns`);\n  }\n\n  async getCampaignDashboard(campaignId) {\n    return this.request(`/dashboard/campaign/${campaignId}`);\n  }\n\n  async getUsers() {\n    return this.request('/users');\n  }\n\n  async createUser(userData) {\n    return this.request('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateUser(userId, userData) {\n    return this.request(`/users/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async deleteUser(userId) {\n    return this.request(`/users/${userId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async me() {\n    return this.request('/auth/me');\n  }\n\n  // Novos métodos para vídeo\n  async getVideoCampaigns() {\n    return this.request('/dashboard/video/campaigns');\n  }\n\n  async getVideoCampaignDashboard(campaignId) {\n    return this.request(`/dashboard/video/campaign/${campaignId}`);\n  }\n\n  async getVideoFormatsComparison() {\n    return this.request('/dashboard/video/formats/comparison');\n  }\n}\n\nconst apiService = new ApiService();\n\nconst authService = {\n  login: (username, password) => apiService.login({ username, password }),\n  logout: () => apiService.logout(),\n  me: () => apiService.me(),\n};\n\nexport { authService };\nexport default apiService;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}